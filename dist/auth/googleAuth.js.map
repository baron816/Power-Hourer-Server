{"version":3,"sources":["../../src/auth/googleAuth.js"],"names":["googleAuth","next","idToken","fn","auth","client","OAuth2","process","env","CLIENT_ID","verifyIdToken","err","login","payload","getPayload","googleId"],"mappings":";;;;;kBAEwBA,U;;AAFxB;;;;;;AAEe,SAASA,UAAT,CAAoBC,IAApB,EAA0BC,OAA1B,EAAmCC,EAAnC,EAAuC;AACpD,MAAMC,OAAO,iCAAb;AACA,MAAMC,SAAS,IAAID,KAAKE,MAAT,CAAgBC,QAAQC,GAAR,CAAYC,SAA5B,CAAf;;AAEAJ,SAAOK,aAAP,CACER,OADF,EAEEK,QAAQC,GAAR,CAAYC,SAFd,EAGE,UAAUE,GAAV,EAAeC,KAAf,EAAsB;AACpB,QAAID,GAAJ,EAAS;AACPV,WAAKU,GAAL;AACD,KAFD,MAEO;AACL,UAAME,UAAUD,MAAME,UAAN,EAAhB;AACA,UAAMC,WAAWF,QAAQ,KAAR,CAAjB;;AAEAV,SAAGY,QAAH;AACD;AACF,GAZH;AAcD","file":"googleAuth.js","sourcesContent":["import GoogleAuth from 'google-auth-library';\n\nexport default function googleAuth(next, idToken, fn) {\n  const auth = new GoogleAuth;\n  const client = new auth.OAuth2(process.env.CLIENT_ID);\n\n  client.verifyIdToken(\n    idToken,\n    process.env.CLIENT_ID,\n    function (err, login) {\n      if (err) {\n        next(err)\n      } else {\n        const payload = login.getPayload();\n        const googleId = payload['sub'];\n\n        fn(googleId)\n      }\n    }\n  )\n}\n"]}