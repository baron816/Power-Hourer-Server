{"version":3,"sources":["../../src/playlists/playlistsController.js"],"names":["playlistsIndex","playlistsCreate","playlistItems","playlistDelete","playlistIncrementPlayCount","playlistItemUpdate","playlistItemDelete","playlistItemAdd","moveItemUpdate","playlistUpdate","idParam","playlistItemParam","req","res","next","page","query","paginate","exposed","sort","limit","then","docs","pages","total","playlists","map","playlist","excludeKeys","json","err","body","owner","user","_id","newPlaylist","save","remove","removed","playCount","item","playlistItem","update","Object","assign","$pull","$push","oldIndex","newIndex","movePlaylistItem","id","findById","Error","itemId","find","String"],"mappings":"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","file":"playlistsController.js","sourcesContent":["import Playlist from './playlistModel';\n\nexport function playlistsIndex(req, res, next) {\n  const {page} = req.query;\n\n  Playlist\n  .paginate({exposed: true}, {sort: '-playCount', limit: 25, page: page || 1})\n  .then(function({docs, page, pages, total}) {\n    const playlists = docs.map(playlist => playlist.excludeKeys('playlistItems'));\n    res.json({playlists, page, pages, total});\n  }, function(err) {\n    next(err);\n  });\n}\n\nexport function playlistsCreate(req, res, next) {\n  req.body.owner = req.user._id;\n\n  const newPlaylist = new Playlist(req.body);\n\n  newPlaylist.save(function(err, playlist) {\n    if (err) {\n      next(err);\n    }\n\n    res.json({playlist});\n  });\n}\n\nexport function playlistItems(req, res) {\n  const {playlistItems} = req.playlist;\n\n  res.json(playlistItems || []);\n}\n\nexport function playlistDelete(req, res, next) {\n  const playlist = req.playlist;\n\n  playlist.remove(function (err, removed) {\n    if (err) {\n      next(err);\n    } else {\n      res.json(removed);\n    }\n  });\n}\n\nexport function playlistIncrementPlayCount(req, res, next) {\n  const playlist = req.playlist;\n\n  playlist.playCount += 1;\n\n  playlist.save(function (err) {\n    if (err) {\n      next(err);\n    } else {\n      res.json(playlist._id);\n    }\n  });\n}\n\nexport function playlistItemUpdate(req, res, next) {\n  const playlist = req.playlist;\n  const item = req.playlistItem;\n  const update = req.body;\n\n  req.playlistItem = Object.assign(item, update);\n\n  playlist.save(function(err) {\n    if (err) {\n      next(err);\n    } else {\n      res.json(req.playlistItem);\n    }\n  });\n}\n\nexport function playlistItemDelete(req, res, next) {\n  const playlist = req.playlist;\n  const item = req.playlistItem;\n\n  Playlist.update( {_id: playlist._id}, { $pull: { playlistItems: {_id: item._id } } }, function (err) {\n      if (err) {\n        next();\n      } else {\n        res.json(item._id);\n      }\n  } );\n}\n\nexport function playlistItemAdd(req, res, next) {\n  const playlist = req.playlist;\n  const item = req.body;\n\n  Playlist.update( {_id: playlist._id}, { $push: { playlistItems: item } }, function (err) {\n    if (err) {\n      next();\n    } else {\n      res.json(item);\n    }\n  });\n}\n\nexport function moveItemUpdate(req, res) {\n  const playlist = req.playlist;\n\n  const {oldIndex, newIndex} = req.body;\n\n  playlist.movePlaylistItem(oldIndex, newIndex);\n\n  res.json(playlist._id || {});\n}\n\nexport function playlistUpdate(req, res, next) {\n  const playlist = req.playlist;\n  const update = req.body;\n\n  req.playlist = Object.assign(playlist, update);\n\n  req.playlist.save(function (err, playlist) {\n    if (err) {\n      next(err);\n    } else {\n      res.json(playlist.excludeKeys('playlistItems') || {});\n    }\n  });\n}\n\nexport function idParam(req, res, next, id) {\n  Playlist\n  .findById(id)\n  .then(function(playlist) {\n    if (playlist) {\n      req.playlist = playlist;\n      next();\n    } else {\n      next(new Error('Not found'));\n    }\n  }, function(err) {\n    next(err);\n  });\n}\n\nexport function playlistItemParam(req, res, next, itemId) {\n  const playlist = req.playlist;\n  const playlistItem = playlist.playlistItems.find((item) => String(item._id) === itemId);\n\n  if (playlistItem) {\n    req.playlistItem = playlistItem;\n  }\n  next();\n}\n"]}