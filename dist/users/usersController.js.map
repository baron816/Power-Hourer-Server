{"version":3,"sources":["../../src/users/usersController.js"],"names":["userPlaylists","findOrCreateUser","req","res","_id","user","find","owner","then","playlistsData","playlists","map","playlistId","title","thumbnail","exposed","json","next","auth","client","OAuth2","process","env","CLIENT_ID","idToken","headers","authorization","verifyIdToken","err","login","payload","getPayload","googleId","findOne","token","newUser","save","usr"],"mappings":"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","file":"usersController.js","sourcesContent":["import User from './userModel';\nimport Playlist from '../playlists/playlistModel';\nimport GoogleAuth from 'google-auth-library';\nimport { signToken } from '../auth/auth';\n\nexport function userPlaylists(req, res) {\n  const {_id} = req.user;\n\n  Playlist\n  .find({owner: _id})\n  .then(function(playlistsData) {\n    const playlists = playlistsData.map(({_id, owner, playlistId, title, thumbnail, exposed}) => ({_id, owner, playlistId, title, thumbnail, exposed}));\n    res.json({playlists} || {});\n  });\n}\n\nexport function findOrCreateUser(req, res, next) {\n  const auth = new GoogleAuth;\n  const client = new auth.OAuth2(process.env.CLIENT_ID);\n\n  const {authorization: idToken} = req.headers;\n\n  client.verifyIdToken(\n    idToken,\n    process.env.CLIENT_ID,\n    function (err, login) {\n      if (err) {\n        next(err);\n      } else {\n        const payload = login.getPayload();\n        const googleId = payload['sub'];\n\n        User.findOne({googleId})\n        .then(function (user) {\n          if (user) {\n            Playlist.find({owner: user._id})\n            .then(function(playlistsData) {\n              const playlists = playlistsData.map(({_id, owner, playlistId, title, thumbnail, exposed}) => ({_id, owner, playlistId, title, thumbnail, exposed}));\n\n              const token = signToken(user._id);\n              res.json({token, playlists} || {});\n            });\n          } else {\n            const newUser = new User({googleId});\n\n            newUser.save(function (err, usr) {\n              if (err) {\n                next(err);\n              } else {\n                const token = signToken(usr._id);\n                res.json({token, playlists: []});\n              }\n            });\n          }\n        });\n      }\n    }\n  );\n\n}\n\n// export function idParam(req, res, next, id) {\n//   User\n//   .findById(id)\n//   .then(function(user) {\n//     if (user) {\n//       req.user = user;\n//       next();\n//     } else {\n//       res.status(404).json({err: 'Not found'});\n//     }\n//   }, function(err) {\n//     next(err);\n//   });\n// }\n"]}