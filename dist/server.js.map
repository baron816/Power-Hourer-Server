{"version":3,"sources":["../src/server.js"],"names":["app","use","json","cleanup","req","res","status","url","err","error","Promise","resolve","server","listen","port","console","log","on","start"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;uDAEe;AAAA;;AAAA;AAAA;AAAA;AAAA;AACPA,eADO,GACD,wBADC;;AAEbA,gBAAIC,GAAJ,CAAQ,qBAAR;;AAEAD,gBAAIC,GAAJ,CAAQ,sBAAO,UAAP,CAAR;AACAD,gBAAIC,GAAJ,CAAQ,qBAAWC,IAAX,EAAR;;AALa;AAAA,mBAOa,8BAPb;;AAAA;AAAA;AAOLC,mBAPK,SAOLA,OAPK;;;AASbH,gBAAIC,GAAJ,CAAQ,QAAR;AACAD,gBAAIC,GAAJ,CAAQ,YAAR;;AAEAD,gBAAIC,GAAJ,CAAQ,UAASG,GAAT,EAAcC,GAAd,EAAmB;AACzBA,kBAAIC,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqB,EAACK,KAAKH,IAAIG,GAAV,EAArB;AACD,aAFD;;AAIAP,gBAAIC,GAAJ,CAAQ,UAASO,GAAT,EAAcJ,GAAd,EAAmBC,GAAnB,EAAwB;AAC9BA,kBAAIC,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqB;AACnBO,uBAAOD;AADY,eAArB;AAGD,aAJD;;AAhBa,6CAsBN,IAAIE,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AACpC,kBAAMC,SAASZ,IAAIa,MAAJ,CAAW,iBAAOC,IAAlB,EAAwB,YAAY;AACjDC,wBAAQC,GAAR,wBAAiC,iBAAOF,IAAxC;AACAF,uBAAOK,EAAP,CAAU,OAAV,EAAmB,YAAY;AAC7Bd;AACD,iBAFD;AAGAQ,wBAAQC,MAAR;AACD,eANc,CAAf;AAOD,aARM,CAtBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;WAAeM,K;;;;SAAAA,K","file":"server.js","sourcesContent":["import express from 'express';\nimport cors from 'cors';\n\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\n\nimport setUpMongoose from './config/setup-mongoose'\nimport config from './config/config';\nimport usersRouter from './users/usersRouter';\nimport playlistsRouter from './playlists/playlistsRouter';\n\nexport default async function start() {\n  const app = express();\n  app.use(cors());\n\n  app.use(morgan('combined'));\n  app.use(bodyParser.json());\n\n  const { cleanup } = await setUpMongoose();\n\n  app.use('/users', usersRouter);\n  app.use('/playlists', playlistsRouter);\n\n  app.use(function(req, res) {\n    res.status(404).json({url: req.url});\n  });\n\n  app.use(function(err, req, res) {\n    res.status(500).json({\n      error: err,\n    });\n  });\n\n  return new Promise(function (resolve) {\n    const server = app.listen(config.port, function () {\n      console.log(`Listening on port ${config.port}`)\n      server.on('close', function () {\n        cleanup()\n      });\n      resolve(server)\n    });\n  });\n}\n"]}